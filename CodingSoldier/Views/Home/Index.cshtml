@{
    ViewBag.Title = "Coding Soldier - Boney Johns";
}

<div class="jumbotron main-header">
    Hi there! This is <a href="/home/about/boney-johns" target="_blank">Boney</a>. In this website I'm putting forward my posts and studies on various technologies. Hope it would be of some help to you guys.
</div>
<div class="row" style="margin-bottom:15px;">
    <div class="col-md-12">
        Continuous learning is a must for any developer so that the person stays updated to the latest technologies.
        New technologies keep coming up all the time. We need to get our hands dirty in them. At the same time there will be areas that we haven’t touched for some time and hence have forgotten.<br />
        Basics is the foundation. We need to get it right, because based on basics only we build forward.
        After learning about a topic from a blog/book, we need to do prototyping, teach someone or create a documentation for self reference so that the concept stays clear.
        Here I’m writing <a target="_blank" href="/posts/">posts</a> about the various topics that I have learned over time.
        Also I'm sharing my <a target="_blank" href="/studies/">studies</a>, which helps me in quick revision of concepts or 
        command in case I have forgotten it over time.
    </div>
</div>

<div class="row" style="margin-bottom:15px;">
    <div class="col-md-12">
        <span>Some food for thought: :)</span>
    </div>
</div>

<div class="row">
    <div class="col-md-4">
        <span>C# .Net</span>
        <ol>
            <li>
                This one may sound way too naive, unless you have really thought about it.
                class A {}
                void Main {A ob = new A();}
                what is ob?
            </li>
            <li>
                String is a Reference type right? If so, will the value string variable change reflect if it is passed as a parameter to a method,
                without the 'ref' keyword? Why ?
                void Main()
                {
                string a = "hello";
                ChangeValue(a);
                Console.WriteLine(a);
                }
                void ChangeValue(string input)
                {
                input = "hi";
                }
            </li>
            <li>
                Provide an instance where decorator pattern is used in Dot Net Framework Library ?
            </li>
            <li>
                Dictionary or HashTable is faster? Why ?
            </li>
            <li>
                What is method inlining ?
            </li>
            <li>
                What is meant by coding against interfaces ?
            </li>
        </ol>
    </div>
    <div class="col-md-4">
        <span>ASP.Net</span>
        <ol>
            <li>
                You have an Aspx page.<br /> Page has textbox control and a button control.<br />
                You have viewstate turned off for the page and the textbox control.<br />
                Page loads the first time. You enter some text into the textbox and you click submit button.<br />
                After the page posts back, will the text entered in the textbox be retained or not?
            </li>
            <li>
                In which environment would an ASP.Net Core site run fast? In a Linux server or in a Windows server ?
            </li>
            <li>
                How is the request pipeline of ASP.Net Core different from previous site versions of ASP.Net ?
            </li>
        </ol>
    </div>
    <div class="col-md-4">
        <span>JavaScript</span>
        <ol>
            <li>
                What feature in JavaScript makes currying possible ?
            </li>
            <li>
                What exactly is "__proto" property of an object ?
            </li>
            <li>
                Lexial scoping and closure both are in play here. What would be the value printed out to console ?

                function outerFunc(){
                var a = 1;
                var printA = function(){
                console.log(a);
                }
                var incrementA = function(){
                a++;
                }
                return {printA, incrementA};
                }

                let {printA, incrementA} = outerFunc();
                incrementA();
                printA();                
            </li>
        </ol>
    </div>
</div>